AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template for creating security groups for Lambda, RDS, ElastiCache, and intermediary access

Parameters:
  VpcId:
    Type: String
    Description: 'The ID of the VPC where the security groups will be created'

  AppName:
    Type: String
    Description: 'The name of the application'
    Default: 'ShortLinkApp'

  Environment:
    Type: String
    Description: 'The deployment environment (dev, uat, prod)'
    AllowedValues: 
      - dev
      - uat
      - prod
    Default: 'dev'

  AllowedIpAddresses:
    Type: List<String>
    Description: 'List of IP addresses allowed to access Redis and RDS'

Resources:
  # Security group for Lambda functions
  LambdaSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for Lambda functions'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow inbound traffic on port 443 from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        # Allow all outbound traffic
        - IpProtocol: tcp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: appname
          Value: !Ref AppName
        - Key: environment
          Value: !Ref Environment

  # Security group for ElastiCache Redis
  ElastiCacheSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for ElastiCache Redis'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow inbound traffic on port 6379 from the Lambda security group
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
        # Allow inbound traffic on port 6379 from the specified IP addresses
        - !ForEach [cidr, !Ref AllowedIpAddresses]
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: !Select [0, cidr]
      Tags:
        - Key: appname
          Value: !Ref AppName
        - Key: environment
          Value: !Ref Environment

  # Security group for RDS
  RdsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow inbound traffic on port 5432 from the Lambda security group
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
        # Allow inbound traffic on port 5432 from the specified IP addresses
        - !ForEach [cidr, !Ref AllowedIpAddresses]
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Select [0, cidr]
      Tags:
        - Key: appname
          Value: !Ref AppName
        - Key: environment
          Value: !Ref Environment

  # Security group for API Gateway
  ApiGatewaySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for API Gateway'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow inbound traffic on port 443 from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        # Allow all outbound traffic
        - IpProtocol: tcp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: appname
          Value: !Ref AppName
        - Key: environment
          Value: !Ref Environment

Outputs:
  LambdaSecurityGroupId:
    Description: "ID of the Lambda security group"
    Value: !Ref LambdaSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-LambdaSecurityGroupId"

  ElastiCacheSecurityGroupId:
    Description: "ID of the ElastiCache security group"
    Value: !Ref ElastiCacheSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-ElastiCacheSecurityGroupId"

  RdsSecurityGroupId:
    Description: "ID of the RDS security group"
    Value: !Ref RdsSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-RdsSecurityGroupId"

  ApiGatewaySecurityGroupId:
    Description: "ID of the API Gateway security group"
    Value: !Ref ApiGatewaySecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-ApiGatewaySecurityGroupId"
